import secondPractice.*

const julieta = new Personas(edad = 42)
const ana     = new Atleta(edad =25)
const rosa    = new Atleta(edad = 45,tecnicas = 8)
const perla   = new Atleta(edad = 28,tecnicas = 4,masaMuscular = 6)
const monica  = new Docente(edad = 45, cursos = 6)
const luisa   = new Docente(edad= 35, cursos =1 )
//planeta

const triton = new Planeta(habitantes = [julieta,ana,rosa,perla,monica,luisa],museos = 0,murallas =0 )

test "julieta"{
	assert.equals(20,julieta.potencia())
	assert.equals(8,julieta.inteligencia())
	assert.notThat(julieta.destacada())
}
test "ana"{
	assert.equals(28,ana.potencia())
	assert.equals(12,ana.inteligencia())
	assert.that(ana.destacada())
}
test "rosa"{
	assert.equals(52,rosa.potencia())
	assert.equals(8,rosa.inteligencia())
	assert.that(rosa.destacada())
}
test "perla"{
	assert.equals(44,perla.potencia())
	assert.equals(12,perla.inteligencia())
	assert.notThat(perla.destacada())
}
test "monica"{
	assert.equals(20,monica.potencia())
	assert.equals(20,monica.inteligencia())
	assert.that(monica.destacada())
}
test "luisa"{
	assert.equals(20,luisa.potencia())
	assert.equals(14,luisa.inteligencia())
	assert.notThat(luisa.destacada())	
}
test "triton"{
	assert.equals([ana,rosa,monica],triton.delegacion())
	assert.notThat(triton.planetaCulto())
	assert.equals(184,triton.potenciaReal())
}
test "nueva perla"{
	perla.entrenar(15)
	perla.aprenderTecnica()
	assert.equals(65,perla.potencia())
	assert.notThat(perla.destacada())
	perla.aprenderTecnica()
	perla.aprenderTecnica()
    assert.that(perla.destacada())
}






